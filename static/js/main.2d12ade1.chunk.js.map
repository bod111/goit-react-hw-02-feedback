{"version":3,"sources":["Components/FeedbackOptions/FeedbackOptions.jsx","Components/Section/Section.jsx","Components/NotificationMessage/NotificationMessage.jsx","Components/Statistics/Statistics.jsx","Components/App.js","index.js","Components/FeedbackOptions/FeedbackOptions.module.css"],"names":["FeedbackOptions","options","onButtonClick","className","styles","container","map","option","btn","type","name","onClick","Section","title","children","NotificationMessage","props","Statistics","good","neutral","bad","total","percent","App","state","target","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","Number","toFixed","this","Object","keys","Component","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"4SA2BeA,EAvBS,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,QAASC,EAAoB,EAApBA,cAClC,OACE,qBAAKC,UAAWC,IAAOC,UAAvB,SACGJ,EAAQK,KAAI,SAACC,GAAD,OACX,wBACEJ,UAAWC,IAAOI,IAElBC,KAAK,SACLC,KAAMH,EACNI,QAAST,EALX,SAOGK,GALIA,SCOAK,EAdC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,qCACE,6BAAKD,IACJC,MCCQC,EALa,SAAAC,GAC1B,OAAO,mDCyBMC,EAzBI,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,KAAMC,EAAmC,EAAnCA,QAASC,EAA0B,EAA1BA,IAAKC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,QAC/C,OACE,qCACa,IAAVD,GAAe,cAAC,EAAD,IACL,IAAVA,GACC,+BACE,wCAAWH,KACX,2CAAcC,KACd,uCAAUC,KACV,yCAAYC,KACXC,EAAU,GAAK,qDAAwBA,EAAxB,cCRpBC,E,4MACJC,MAAQ,CACNN,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAEPlB,cAAgB,YAAiB,IACzBQ,EADwB,EAAbe,OACGf,KACpB,EAAKgB,UAAS,SAACC,GAAD,sBAAmBjB,EAAOiB,EAAUjB,GAAQ,O,EAG5DkB,mBAAqB,WACnB,MAA+B,EAAKJ,MACpC,OADA,EAAQN,KAAR,EAAcC,QAAd,EAAuBC,K,EAIzBS,gCAAkC,WAChC,IAAMR,EAAQ,EAAKO,qBAInB,OAFY,IAAVP,EAAcS,QAAS,EAAKN,MAAMN,KAAOG,EAAS,KAAKU,WAAa,G,4CAKxE,WACE,MAA+BC,KAAKR,MAA5BN,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACvB,OACE,qCACE,cAAC,EAAD,CAASP,MAAM,wBAAf,SACE,cAAC,EAAD,CACEX,cAAe8B,KAAK9B,cACpBD,QAASgC,OAAOC,KAAKF,KAAKR,WAG9B,cAAC,EAAD,CAASX,MAAM,aAAf,SACE,cAAC,EAAD,CACEK,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOW,KAAKJ,qBACZN,QAASU,KAAKH,6C,GAxCRM,aAgDHZ,ICjDfa,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1BC,EAAOC,QAAU,CAAC,UAAY,mCAAmC,IAAM,gC","file":"static/js/main.2d12ade1.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport styles from './FeedbackOptions.module.css'\r\n\r\nconst FeedbackOptions = ({ options, onButtonClick }) => {\r\n  return (\r\n    <div className={styles.container}>\r\n      {options.map((option) => (\r\n        <button\r\n          className={styles.btn}\r\n          key={option}\r\n          type=\"button\"\r\n          name={option}\r\n          onClick={onButtonClick}\r\n        >\r\n          {option}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nFeedbackOptions.propTypes = {\r\noptions: PropTypes.array,\r\n  onButtonClick: PropTypes.func,\r\n}\r\n\r\nexport default FeedbackOptions\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <>\r\n      <h2>{title}</h2>\r\n      {children}\r\n    </>\r\n  )\r\n}\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.node,\r\n}\r\n\r\nexport default Section\r\n","import React from 'react'\r\n\r\n\r\nconst NotificationMessage = props => {\r\n  return <p>No feedback given</p>;\r\n}\r\n\r\n\r\nexport default NotificationMessage\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport NotificationMessage from '../NotificationMessage/NotificationMessage'\r\n\r\nconst Statistics = ({ good, neutral, bad, total, percent }) => {\r\n  return (\r\n    <>\r\n      {total === 0 && <NotificationMessage />}\r\n      {total !== 0 && (\r\n        <ul>\r\n          <li>Good: {good}</li>\r\n          <li>Neutral: {neutral}</li>\r\n          <li>Bad: {bad}</li>\r\n          <li>Total: {total}</li>\r\n          {percent > 0 && <li>Positive feedback: {percent}%</li>}\r\n        </ul>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number,\r\n  neutral: PropTypes.number,\r\n  bad: PropTypes.number,\r\n  total: PropTypes.number,\r\n  percent: PropTypes.number,\r\n}\r\n\r\nexport default Statistics\r\n","import { Component } from \"react\";\nimport \"./App.css\";\nimport FeedbackOptions from \"./FeedbackOptions/FeedbackOptions\";\nimport Section from \"./Section/Section\";\nimport Statistics from \"./Statistics/Statistics\";\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n  onButtonClick = ({ target }) => {\n    const name = target.name;\n    this.setState((prevState) => ({ [name]: prevState[name] + 1 }));\n  };\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    return good + neutral + bad;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const total = this.countTotalFeedback();\n    const percentage =\n      total !== 0 ? Number(((this.state.good / total) * 100).toFixed()) : 0;\n    // console.log(\"App ~ percentage\", percentage, typeof percentage);\n    return percentage;\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    return (\n      <>\n        <Section title=\"Please leave feadback\">\n          <FeedbackOptions\n            onButtonClick={this.onButtonClick}\n            options={Object.keys(this.state)}\n          />\n        </Section>\n        <Section title=\"Statistics\">\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={this.countTotalFeedback()}\n            percent={this.countPositiveFeedbackPercentage()}\n          />\n        </Section>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./Components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FeedbackOptions_container__2ppVH\",\"btn\":\"FeedbackOptions_btn__1MC4g\"};"],"sourceRoot":""}